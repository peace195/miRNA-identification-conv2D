%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 473.000000 231.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.6 (Build 17G65) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 473 231
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 473 231
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /I put
dup 34 /n put
dup 35 /p put
dup 36 /u put
dup 37 /t put
dup 38 /one put
dup 39 /space put
dup 40 /x put
dup 41 /nine put
dup 42 /L put
dup 43 /C put
dup 44 /o put
dup 45 /v put
dup 46 /comma put
dup 47 /S put
dup 48 /m put
dup 49 /l put
dup 50 /i put
dup 51 /g put
dup 52 /M put
dup 53 /a put
dup 54 /A put
dup 55 /d put
dup 56 /e put
dup 57 /r put
dup 58 /F put
dup 59 /y put
dup 60 /c put
dup 61 /two put
dup 62 /five put
dup 63 /six put
dup 64 /f put
dup 65 /ampersand put
dup 66 /O put
dup 67 /parenleft put
dup 68 /s put
dup 69 /parenright put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<










00>] def
/CharStrings 39 dict dup begin
/.notdef 0 def
/space 1 def
/ampersand 2 def
/parenleft 3 def
/parenright 4 def
/comma 5 def
/one 6 def
/two 7 def
/five 8 def
/six 9 def
/nine 10 def
/A 11 def
/C 12 def
/F 13 def
/I 14 def
/L 15 def
/M 16 def
/O 17 def
/S 18 def
/a 19 def
/c 20 def
/d 21 def
/e 22 def
/f 23 def
/g 24 def
/i 25 def
/l 26 def
/m 27 def
/n 28 def
/o 29 def
/p 30 def
/r 31 def
/s 32 def
/t 33 def
/u 34 def
/v 35 def
/x 36 def
/y 37 def
/uni2B91 38 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C93181B17796A1204F5476A04185A500C7D1646046CB4388F5303793A507F74A76DAE145DD38CA17C6954414D452101DA341F2D911EC619168352E2540814BDC49C67407F624CC460C55EE19F35A454BF6377F8B935FC4DB5BC5794CC9E30B3BB95610FDC72BCECB8719EDA30D903770034B997F88648719478719B721DEE76697D48488D3214461B788A60450DF5F56B41EB14DD548933DDADA9677BED82C3A40DFB45F364E2CBF74050EAE1CEDC3D354929D8562EA1D550F6EFB9BC92EADC70CAE42F330C607FDF6F1E5C82548463F6EF819D211010B735D9E946422CB5AF96C46251BC54F6B252C357BA2A93F1AA5CB4721039AD2EF86C520C1936C83B472D1590F2876B12CE021FA27E189BCF8EE87DEB7B4AAD082DC6259836475149996CD796E2BE78E96547A8F15E0FB787333873733327D539FC2C10EA576B37C1713FD142AA728BE7820640A6886027E8D3FB2897B22D014B224B1252D15D80C3DFF3C97D72B2773AA051F404A4CD0EF9FF77FF6E4BFF5DB7D9070A70C2B243E5C943088E1ECE29F72A122BA0847240E1FE49C9A81FFC302FF59FA65842E3AA2BBE879C7B709E737B2A2E25C61D0FB8239F1E8B7F5E8135FE51E65F65F9E204513B255A3C0337BFC9D9E00548D3B533867D2369F72BC9CC4EF5911C47E372D9435F1C79D6034D4DAABFBC0B33D4BA42BD764B36BFF742DD3244A3C4FFC8D226B5836BAA76DF3DFC5A5E439C9E0B9602C4C3E1046219743E31CB86E95DE4EB7FE69194A4
ADB6C7914C28F7466B603FCD52FD99D53841F8E37655A2151EA41885D00D1DACD1B63A47E0BFD91A8F7BE630E7368A5CEBC226BEDF003C42E3A2D0C9F764BF5382A44491FCED5F8093C27B7C74F2C36307E84365BAC30EF5F558DDA1C76AB8F16743694C998427853C5E3BAB9443BF2E0F6FAD7C752E2176EF38F882D33E3255F43B702EC3591B38FB1A82C1B7D829E2ED667083E5567620A0BF1C6FE40E899A83E412D86E0FED08E399D006700D8AE9CA3505047F91AB72DBEA433C0D8CDD2A9865BBD287FE5E96C52ADE67A9FEB860E559111343FDF9E32CEDBBE75C62A4F607AD3E1A3D5B2FA6DC240F4781FE2D94CB855838D0F10AB8B6518AD1D5CE4AFED43CA0D0259350F39DD2621291C9A5E054E0010322360BF14B0C4EC8AD82A5E8923A4B18A12D8313BD1FBED9A4A421662B615731472C08BB080B1FCDE084322C94C698C7600B112C55A98CBF5408FFBAE37E5D8A6C14DAD9C8971777B21F595340AD1043FE16E3D1314EE9FE3B324A90714E311D0C23D9627C640C4D63BF1815B6D7C8FAC8D728762F158DA31314AC12B497D4248498B9593984DC7BC15EB2B12EDBC26E4FED969CF80BDE864794CA0E756958232464841F3486DB892067966D99FA20AE9E9E93EDC4EB3D67833E699353D91EF99582AAE1DABC9C56D4B89DD0C034CD77A4480B9530BD65285CF2AF0973F6454A85487C7FB3537E70D4D90DC568C6DCE44C430AF148FBF9273036A8303A29A301B98A53F31EB6777DCD9A2FD1F40C4120420CC66C2A7B57AFB954FB5E044A71748F496604BD47C972B48E167BA4F5DC02A9BB23C24276843CE774DB7F5BC15C9CB94B0AF833DA332CDDB50978FB5F2544DF05CE5E752CEEE0014E8C8F13D7B6AC78B379E723098423E0688426D67D93C934EEA424BE52F92794B48A007DFF9AE22C279284493129AD8D250884D36AAB1A5A04E1371677ADDF1E3992D77D1A75CE4DF1932CDA37AD6D709ED4D5AC5897DFBFB1CDE5E5AB5F5C85A4B0FF5B1453115D5D5135E6A4132FB44C877D1B1DFF891230DBE243C3B6102870F10FD93585F432E443EA7EA25450CE28E8393E694874623EF1442521311079C1489FFBABDC93F2E5401AA77C072D9CBCD34AD2F62A2FE4AD49664075DE48E000B405DE5D31E27AB985E84F99FF1AB1D3745D1C8D6A8D48B7545C45C4976D01B99AE584E00AFA4D01717C07CE95903439B1541A1CBF5FADE821DF5B42579F71E8A030B48156D49862A2477DCE5A51CFDD1735251B6F3F52639D11571258176AB29395CD1D324E4DDC3086B5B8F5D72FC6EEB0588EA84813EE6A0D0A170B594C366E5D402D8E3B26D2DA84102FAB6B66F83B455C87C96B692EE4FEE35CF66C37C0A8FD97DCA84E996733CD5523FC771D0A6EF59EF6365F9F5442933AD1CC1826FD0C39F28569DC33FDF66068835B1830E4AE6D


829D111E85740D44BE14F8215C953FFE33AC3A8D2E21D9EADA2C72DC3858E6B5A8547FFFEB69241917EB908FC562AAF8CFE6266682936E3B7325CBFD1A8AB7D95E54CE5972A44017C8A97111D5327F624F96B859C7B3FCC5237D08F8D5A8C00D839717A3D46ED03471BDA3F001FDFFBE561F3986766165B63184A1DB6A531169B9F2A4C8F2591CC2704E51BAF0B5C8EF198BE49ED060792B1EA87A8455C476740D3501D6CF8D1E547F91F5F2650E86C77F868EF7C59BE2B6DBFA11604E9E4619CC28483A87619F5475A78DA053C24182387B5A971E5BA76829F904D58406F16692F75006CDA3AC2A380DD5EFE8C359EA4BFDE65D6C26409A6935F3D3C9C406180E7466669ED7172B62381928F52E8B59C3CEAF6001588BFD146AB7D73823D8C2DE771E99FEECF446A3357D937C9D463FDE8E3A6CB8C29F0D45DC31A7474DF448CE3E7F15870EF7C4F3EA3910DDCCBFD590D2FBF896DA93C81A6376271AFD90B74DB26D8C1767835AEBFCE976CBDA045DD6B36EC8AE9C5A6A2C8B64665C8DF917B162FF52F96AAF79F5C84CB124CD79F8EEAE8A90CDD0AEEE0CF20F6294EBD38720473C366CAA7A8ED22EB6682E6B6F11D0ECB075C22677FEC9164CBEDAC7AE9A5316A08B25AF2BBF0D91BD9C4CBE4F3C46057D94BBBBB19C100FBE21A97210DD4BDB3C49F620C6258725BC9A6F1E4BC30A0BFF68FF655AB7F08C70A83E9E49D089CC35F099F7AFF4D12CE404E19FF4199E831B05C2526BDBE33056B1C9C26EC8C6AD6B1FE4FF397F69A5427152FBC642715C8C58DCC590A21023F814E9B7CDB41D515F12C559D2153D3754E24E3AC1141C22FA1847E5A5454999319BBB7876C606850C9C76C10C50F1868849ABB0CB4ED7E0B3A4B454CC895EA8955B480CA2E36209B1C110ADD1488F59D1AA8408A0D95C1773B3D3402A68A28CC73C0D09EF9C71AE90C7A2E67D702E2036FFA4F1E453C30F06321C55DF0A25FF2A017F589D4AC59D867C1D1B6748D5C7750C095CDB00F38F5BA41590696D36E72D111B5BDA45A72FAE0DCE648E06F30B6EE97E4445507B04CBFB6F9AAEE7C879F3E74A9DB0A2F7AA1258DC4B14119F55204B39A3B44FF8D8667D530663B31AF2B3D806BF3F57F8F471FCC21B292F8F3CFF78392EBAC024E1BB446CFC5DA18FC6D433E49FB54D39EE7CB19A9CB8C6FD2EA1AB02AA65A3D1038A3FB4E2C01C152E98763667E8B73974D0F1E8B5AE58DEEB75FBCD48434695BEFE4CF0499FEF6A665CC15F249D6E47404B26F40A2476A28567CE92DAECA9058EC82DBC003B0187556094729B2EE1E8BD2341DEECBA1449B93A4C48040150C682B936FA2D0579AF4951EBF40A83AC67FC4B822D25883867812CA7D62C9665CD73FE9D9B5E501E80F65D25EBC3A089BF5FA5A2E99487BD9E1F913CE92BD0FDE67190843DED75CAED53945BDC5FB3D2
F581829ACEA781A6A6829AAACAE225315A9EC99A1035BC421B6F03FB0A8B51747E9396DF4E7BC8E119429971D5C800E0C8C2A9CA051BB3D093BFF329821C588F0FE4F8975B6D9111AEED1856EF769CBCBB1D997BBDA59306545DC6B94F8D7D9653C5D3E4DCCB27B3C3CC3FF4413BCB7BE8422BB6EF4BABB00BDF66546DCF5268279766AE6C0010C55DCA339FA136D2FBC2A74BA9D3C0EAB5751F7F076696CDDE8DC5A25208AB1CC56BD90E358405B1A67B804D9B9E2B03C3B7CC4CDC5846EF16A084BFE7DAF6FB7688F70946A2BBB98EEDA458AC21885A133B44ECA049BA9887C4BBB77501452DD8B5201B1FA5A93E38BAF88C9E3D5D3D903BF650558857D269B787BABB94DE2274657739FB8A819D734D15E9CBDFF0C776674D498AE64D9991944B4EDD787CE58D0D60975BFBDB0BF0CC32693018EE6D2797017646285780438E931D62EB2E07E82A962BC72715C3E242CC06D3E433F537407F46CA98C1BB45D31179D4E14BFC1033C8CD41C01B15FB7A78B56FCB20D3DC019D02012111E65786DBF08A43CD4D258AFB929371B7160DCDDC8512F827DBFB056A18727087BAB045E43FDDBD52C554483B0C78063287E81E1A46301F9EE05A2304C3A97D1219D1573E689F13AE83715114B62172A6B8FCB2E783F5DB5CE59AE253420BA627F8E2DC7897A972A3E8F3BA6D8D7396C9C291889CC96FBB1A6C9CE0FBD93B532A740C53D467B809DA8A642B24FDBAC11F5BF1D108F5E0548A60584BEFCF0B6BA586DF5CA45D0F3016FB6103F772452FE5BE9BEF61D879FD23AA875B9B531A4E3A2E33FBE09EB5F517D436758063A6BDDFF25AE7E640D2DA90CCFD727AC75BE055C640C8011298EBACCF0DCC705C32B59E7BBA1354D1D895C985AC0E06A12031595727F77D84E2D86044F151A4B4D0054F502C2FF545A1EE5DEC06AA797F7320D3D3AE169A45D09627D35ADF1D1F6665EB6687E01B1CC8BF462C5A02CF6C1564A32FB15922F35ACCCF37623F7EC06FB955526C7AFC6A844B34E16E07D723CCBC5EC956CE8E96406587A1130149EB14B2DC78C4C51D6F0C6050AE7B7D77EA6676A309901C0FF0A9F3D09569BC25699B0FA12CEC122E41B2D0B9408F46C90FC687C3773BD9F8AE9043729B6621F612AAABE76C16DBC102696EA3EEB438F90A5D446C8FE19FEC69878E88874E4B9F16945DAAC2D75FAE544A82DFBD155C2A1E52171F56DDB2A7E1F410934875B664A452FF535DDBC1921583DD2EAFE5FD3E48F4BF9048C1D448D31360E70599F396D46DB2D1B2851549CFE44A68867469EB097A8611AD3F447FE453A21A3A8A3B5E0808DCDCF84DFD51827858D5F57927A11BE18D51EB34DD4BCAF373095909D345458338E9E3B4DE003D5AD36A635CB7AA693F7AAD4DDFB0F5514DB94F06EB28D2D62ED3B126D58254DAD31115FF694079E631CA78FD45
E5889FB43FF5648C432B5DAEEE03BE8BBF81DAA8EA8FC8D2B64F0E28703D20C47670737EADA62C3B478170429B93FDD00ACB55D911D79A50DDB23FF6139F620B3C9E481ECA6E560FBEB7BF28FF78574B96067F4ED9E34B32E933290F84646109621B9D40DAB116D2668244A3D7D9C19CD72BB84772618EEB0FB34B7E3E55CF9994671C752C9E852FD25D9D1278A5DEAADB9CCEFFE6FDFB3B970705BF6F102A2C5ADD7A82CC17EE12778E8D5715AD0D2D5047E76FE25A5717A0FD8446523B4489012335E2413DE80AE5CEE04635708782D68348A99C394A1A21E01D97E8BAA2498E547010F8CB17BDAE081F1EDC5949629C497F26B22F70BB17C38A0F3405E42BAA6236FD2B07BD60769F6E0AC4762E945365130C1560CE0FCCFCC0999BDCE1AA0D7448CAF525C912B4884FBBF13FDFC8BF5E84D535B8D933F3A65D86B196AD06AB550EDC9C19DE17BB6C44AC9862EE5F3C69EF21AF9180C4F4BD83B81499E4231D3E5A328D1EF4ED26FD8B8D60180FD3AF97EA4B4795F384532DA635BA5EDC6A00D92F88C05239821136B7AD07F99C448B14986DDEFEC7E5C44FAE6930491F65394F7737A9F638A17F946B77778CCC47C8320C622ECB1F984E9746D99EEFA5E90DAA78E7CE165F723FE6C2366E4649CAE6B0CD28637B3E55C638F9818C1156E28F8565C86448FC8EE8211821CEE08F3ADC59A38454E127FC0593983288519407374F617402F687FED487DB1A24C85272346B564D4D23293B7D35A15735B7DAFEA3FAC9F0F9299483BBDBF4437F9A96C7C78A037452D9761BB792A9A723D64BC23AEE8F4A62350393855280F75332492BB4C9BC699F9B5517C2EF5A5867F606EEBF2286D1692169759026800B77307AA649E9F1E3B599DB78C094B60D558D429CA05CBE8379205EE86A7384EB3C8B7009BB846EAE84E4CB80E8525FCB4F86B0D709A5B852FB526654858A61A8483B176D760D4F6CE03B27BFC6E1ACED545DE168533161F0FB801137770BF1D95DAC902BB4092C87DF7FB8B9CC822ACCDB31443FC6B93D8A3D8FEACB032CC2A0E3B03ABF0D57E97A55907243B633526241ABC566C28204BD3B684D84751B1D6D34D4D4C3B6915CF2CBC24BFB0E0B02B51522A854A097626D442D396B15E62697B33E05CA135340B4F3B89A7363D2E8153664030C61EB2712878D1BB1A9626668EB6BD909A3A68674EB97D999D6093647100B7EB5B971B407E1EC14738102C692D451B12DBD58735DBB170E9D13011A20F7D3F3D557CE01B166B5DAE8905A289750A02ACD087734C1FA13B684CD983C237B5EF2AB9785424427F1713732F5641A78C0BBCBF198ECF43F73BF12748647CFDCC91BF7A4D66B6D326ADCBFDF846F2D31EB0063EF16943A8A0C2FAC905508C534AE130C75B315A2DB8D334322F0FEAA1092026A2E7BB941258297385008991C0E70D6E2
81230F652A3C1F52BDE5B4DF4BCE5B0FDE3CCA5388447AFF48D3059F1481A1C058007E30A3857779D0A172A2A1576C67FE1425B50BC90EF0D7F857131F5BBFB4A7FD720B15C1F6C7B1E03F7E93232E92706761E0F2155A3080D1D61853025B9FA47146D55B522B901DF6928F835AB55BA9B5FC4718
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 473 231 rc
0 231 m
473 231 l
473 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1065.8823 1001.5883 m
2130.5881 1001.5883 l
2130.5881 -1309 l
-1065.8823 -1309 l
h
-1065.8823 1001.5883 m
f
52.333057 229.88402 m
52.167038 1.3840797 l
1.1670532 1.421134 l
1.3330711 229.92107 l
h
52.333057 229.88402 m
f
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -226 333 cm
278.33307 103.11598 m
278.16705 331.61591 l
227.16705 331.57886 l
227.33307 103.07893 l
h
278.33307 103.11598 m
S
/Cs1 SC
0 sc
0 i
-0.00072655547 -0.99999976 -0.99999976 0.00072655547 26.750055 115.65258 cm
/F1.1[ 16 0 0 -16 0 0]sf
-18.232 -3.447998 m
(!"#$%)[ 4.144000 8.896000 9.488000 8.896000 0.000000 ] xS
-43.568001 15 m
(&'\('\)'\('*'\('*)[ 8.896000 4.448000 8.288000 4.448000 8.896000 4.448000 8.288000 4.448000 8.896000 4.448000 8.288000 4.448000 0.000000 ] xS
/Cs2 SC
0.75 1 0.75 sc
CM
122.33304 229.83316 m
122.16702 1.3332207 l
71.167038 1.3702751 l
71.333054 229.87021 l
h
122.33304 229.83316 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -226 333 cm
348.33304 103.16684 m
348.16702 331.66678 l
297.16702 331.62973 l
297.33304 103.12978 l
h
348.33304 103.16684 m
S
/Cs1 SC
0 sc
0 i
-0.00072655547 -0.99999976 -0.99999976 0.00072655547 96.750038 115.60172 cm
-67.872002 5.776001 m
(+,"-.'/$0'#,,12"3)[ 11.552000 9.184000 8.896000 6.816000 4.448000 4.448000 10.368000 8.896000 13.648000 4.448000 9.488000 9.184000 9.184000 3.552000 3.552000 8.896000 0.000000 ] xS
/Cs2 SC
0.75 1 0.75 sc
CM
192.33302 229.7823 m
192.16701 1.2823619 l
141.16702 1.3194162 l
141.33304 229.81935 l
h
192.33302 229.7823 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -226 333 cm
418.33301 103.2177 m
418.16699 331.71765 l
367.16702 331.68057 l
367.33304 103.18064 l
h
418.33301 103.2177 m
S
/Cs1 SC
0 sc
0 i
-0.00072655547 -0.99999976 -0.99999976 0.00072655547 166.75002 115.55086 cm
-66.823997 5.776001 m
(+,"-.'45\('#,,12"3)[ 11.552000 9.184000 8.896000 6.816000 4.448000 4.448000 13.936000 8.592000 8.288000 4.448000 9.488000 9.184000 9.184000 3.552000 3.552000 8.896000 0.000000 ] xS
/Cs2 SC
0.75 1 0.75 sc
CM
262.33301 229.73145 m
262.16699 1.231503 l
211.16699 1.2685573 l
211.33302 229.76849 l
h
262.33301 229.73145 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -226 333 cm
488.33301 103.26855 m
488.16699 331.76849 l
437.16699 331.73145 l
437.33301 103.23151 l
h
488.33301 103.26855 m
S
/Cs1 SC
0 sc
0 i
-0.00072655547 -0.99999976 -0.99999976 0.00072655547 236.75 115.5 cm
-84.896004 -3.447998 m
(+,"-.'675#%2-8'5-89538')[ 11.552000 9.184000 8.896000 6.816000 4.448000 4.448000 10.368000 9.488000 8.592000 9.488000 5.040000 3.552000 8.000000 8.592000 4.448000 8.592000 8.000000 8.592000 5.328000 8.592000 9.184000 8.592000 0.000000 ] xS
-26.52 15 m
(#,,12"3)[ 9.488000 9.184000 9.184000 3.552000 3.552000 8.896000 0.000000 ] xS
/Cs2 SC
1 0.75 0.75 sc
CM
332.33298 229.68059 m
332.16696 1.1806442 l
281.16699 1.2176985 l
281.33301 229.71764 l
h
332.33298 229.68059 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -226 333 cm
558.33301 103.31942 m
558.16699 331.81937 l
507.16699 331.78229 l
507.33301 103.28236 l
h
558.33301 103.31942 m
S
/Cs1 SC
0 sc
0 i
-0.00072655547 -0.99999976 -0.99999976 0.00072655547 306.74997 115.44914 cm
-76.008003 -3.447998 m
(:$11;'<,""8<%87'15;89)[ 9.184000 8.896000 3.552000 3.552000 8.000000 4.448000 8.592000 9.184000 8.896000 8.896000 8.592000 8.592000 5.040000 8.592000 9.488000 4.448000 3.552000 8.592000 8.000000 8.592000 0.000000 ] xS
-26.384001 15 m
(&'\('=>?)[ 8.896000 4.448000 8.288000 4.448000 8.896000 8.896000 0.000000 ] xS
/Cs2 SC
1 0.75 0.75 sc
CM
402.33298 229.62973 m
402.16696 1.1297852 l
351.16696 1.1668396 l
351.33298 229.66678 l
h
402.33298 229.62973 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -226 333 cm
628.33295 103.37028 m
628.16693 331.87021 l
577.16693 331.83316 l
577.33301 103.33322 l
h
628.33295 103.37028 m
S
/Cs1 SC
0 sc
0 i
-0.00072655547 -0.99999976 -0.99999976 0.00072655547 376.74997 115.39828 cm
-76.008003 -3.447998 m
(:$11;'<,""8<%87'15;89)[ 9.184000 8.896000 3.552000 3.552000 8.000000 4.448000 8.592000 9.184000 8.896000 8.896000 8.592000 8.592000 5.040000 8.592000 9.488000 4.448000 3.552000 8.592000 8.000000 8.592000 0.000000 ] xS
-17.488001 15 m
(&'\('=)[ 8.896000 4.448000 8.288000 4.448000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
472.33295 229.57887 m
472.16693 1.0789263 l
421.16693 1.1159806 l
421.33295 229.61592 l
h
472.33295 229.57887 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -226 333 cm
698.33295 103.42113 m
698.16693 331.92108 l
647.16693 331.88403 l
647.33295 103.38408 l
h
698.33295 103.42113 m
S
/Cs1 SC
0 sc
0 i
-0.00072655547 -0.99999976 -0.99999976 0.00072655547 446.74994 115.34742 cm
-64.176003 -3.447998 m
(/,@%05\('A'B$%#$%')[ 10.368000 9.184000 4.736000 5.040000 13.648000 8.592000 8.288000 4.448000 10.080000 4.448000 12.160000 8.896000 5.040000 9.488000 8.896000 5.040000 0.000000 ] xS
-66.519997 15 m
(C#,D2%2-8.'"835%2-8E)[ 4.144000 9.488000 9.184000 8.000000 3.552000 5.040000 3.552000 8.000000 8.592000 4.448000 4.448000 8.896000 8.592000 9.184000 8.592000 5.040000 3.552000 8.000000 8.592000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -226 333 cm
278.25006 217.36595 m
287.35004 217.37256 l
S
0 i
CM
69.350044 115.62163 m
61.352226 118.62743 l
61.347866 112.62744 l
h
69.350044 115.62163 m
f
0 J
0 j
1 0 0 -1 -226 333 cm
295.35004 217.37837 m
287.35223 214.37256 l
287.34787 220.37256 l
h
295.35004 217.37837 m
S
1 J
1 j
0.60000002 i
348.25003 217.41681 m
357.35004 217.42342 l
S
0 i
CM
139.35002 115.57077 m
131.3522 118.57658 l
131.34785 112.57658 l
h
139.35002 115.57077 m
f
0 J
0 j
1 0 0 -1 -226 333 cm
365.35004 217.42923 m
357.3522 214.42342 l
357.34784 220.42342 l
h
365.35004 217.42923 m
S
1 J
1 j
0.60000002 i
418.25 217.46767 m
427.35001 217.47427 l
S
0 i
CM
209.35001 115.51991 m
201.35219 118.52572 l
201.34782 112.52572 l
h
209.35001 115.51991 m
f
0 J
0 j
1 0 0 -1 -226 333 cm
435.35001 217.48009 m
427.3522 214.47427 l
427.34784 220.47427 l
h
435.35001 217.48009 m
S
1 J
1 j
0.60000002 i
488.25 217.51852 m
497.35001 217.52513 l
S
0 i
CM
279.34998 115.46905 m
271.35217 118.47486 l
271.34781 112.47486 l
h
279.34998 115.46905 m
f
0 J
0 j
1 0 0 -1 -226 333 cm
505.34998 217.53094 m
497.35217 214.52515 l
497.34781 220.52513 l
h
505.34998 217.53094 m
S
1 J
1 j
0.60000002 i
558.25 217.56938 m
567.34998 217.576 l
S
0 i
CM
349.34998 115.41819 m
341.35214 118.424 l
341.34778 112.424 l
h
349.34998 115.41819 m
f
0 J
0 j
1 0 0 -1 -226 333 cm
575.34998 217.58182 m
567.35217 214.576 l
567.34778 220.576 l
h
575.34998 217.58182 m
S
1 J
1 j
0.60000002 i
628.24994 217.62024 m
637.34998 217.62686 l
S
0 i
CM
419.34995 115.36733 m
411.35214 118.37315 l
411.34778 112.37315 l
h
419.34995 115.36733 m
f
0 J
0 j
1 0 0 -1 -226 333 cm
645.34998 217.63268 m
637.35211 214.62686 l
637.34778 220.62686 l
h
645.34998 217.63268 m
S
ep
end
%%Trailer
%%EOF
